{
  "settingsSync.keybindingsPerPlatform": false,
  "settingsSync.ignoredExtensions": [],
  "settingsSync.ignoredSettings": [],
  "agentic.referenceFile": ".vscode/ai-quick-reference.md",
  "agentic.useWindowsPowerShell": true,
  "agentic.batchSimilarFixes": true,
  "files.watcherExclude": {
    "**/bin/**": true,
    "**/obj/**": true,
    "**/.vs/**": true,
    "**/packages/**": true,
    "**/node_modules/**": true,
    "**/*.dll": true,
    "**/*.exe": true,
    "**/*.pdb": true,
    "**/logs/**": true,
    "**/.git/objects/**": true,
    "**/Syncfusion-Samples/**": true
  },
  "editor.suggest.showKeywords": false,
  "editor.suggest.showSnippets": false,
  "editor.suggest.showWords": false,
  "editor.smoothScrolling": false,
  "editor.cursorBlinking": "solid",
  "editor.fontLigatures": false,
  "editor.occurrencesHighlight": "off",
  "editor.selectionHighlight": false,
  "omnisharp.enableEditorConfigSupport": true,
  "omnisharp.enableRoslynAnalyzers": true,
  "omnisharp.useModernNet": true,
  "omnisharp.maxProjectFileCountForDiagnosticAnalysis": 500,
  "powershell.powerShellAdditionalExePaths": {
    "PowerShell 7.5.2": "C:\\Program Files\\PowerShell\\7\\pwsh.exe"
  },
  "powershell.powerShellDefaultVersion": "PowerShell 7.5.2",
  "powershell.powerShellExePath": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
  "powershell.startAutomatically": true,
  "powershell.enableProfileLoading": true,
  "powershell.integratedConsole.showOnStartup": true,
  "powershell.integratedConsole.suppressStartupBanner": false,
  "powershell.integratedConsole.focusConsoleOnExecute": false,
  "powershell.integratedConsole.useLegacyReadLine": false,
  "powershell.integratedConsole.forceClearScrollbackBuffer": false,
  "powershell.integratedConsole.executeInCurrentScope": true,
  "powershell.analyzeOpenDocumentsOnly": false,
  "powershell.debugging.createTemporaryIntegratedConsole": false,
  "powershell.developer.editorServicesLogLevel": "Information",
  "powershell.developer.waitForSessionFileTimeoutSeconds": 240,
  "powershell.buttons.showRunButtons": true,
  "powershell.buttons.showPanelMovementButtons": true,
  "powershell.promptToUpdatePowerShell": false,
  "powershell.scriptAnalysis.enable": true,
  "powershell.scriptAnalysis.settingsPath": "PSScriptAnalyzerSettings.psd1",
  "powershell.scriptAnalysis.enableReferencesCodeLens": false,
  "powershell.scriptAnalysis.enableDiagnosticSuppression": true,
  "powershell.scriptAnalysis.excludePatterns": [
    "**/*.Tests.ps1",
    "**/bin/**",
    "**/obj/**",
    "**/AI-Assistant/Demos/**"
  ],
  "powershell.codeFormatting.preset": "None",
  "powershell.codeFormatting.alignPropertyValuePairs": false,
  "powershell.codeFormatting.autoCorrectAliases": false,
  "powershell.codeFormatting.avoidSemicolonsAsLineTerminators": false,
  "powershell.codeFormatting.trimWhitespaceAroundPipe": false,
  "powershell.codeFormatting.useConstantStrings": false,
  "powershell.codeFormatting.useCorrectCasing": false,
  "powershell.enableReferencesCodeLens": false,
  "powershell.pester.codeLens": false,
  "powershell.errorAction": "Continue",
  "powershell.warningAction": "Continue",
  "powershell.informationAction": "SilentlyContinue",
  "powershell.verboseAction": "SilentlyContinue",
  "powershell.debugAction": "SilentlyContinue",
  "terminal.integrated.profiles.windows": {
    "PowerShell 7.5.2 (BusBuddy)": {
      "path": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
      "args": [
        "-NoExit",
        "-Command",
        "& { Write-Host 'Checking .NET environment...' -ForegroundColor Yellow; try { $dotnetVersion = dotnet --version 2>$null; Write-Host \".NET SDK: $dotnetVersion\" -ForegroundColor Green; if (Test-Path '${workspaceFolder}\\load-bus-buddy-profiles.ps1') { & '${workspaceFolder}\\load-bus-buddy-profiles.ps1' } } catch { Write-Host 'Run task: Fix .NET Installation if build issues occur' -ForegroundColor Red } }"
      ],
      "icon": "terminal-powershell",
      "color": "terminal.ansiGreen"
    },
    "PowerShell 7.5.2 (Clean)": {
      "path": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
      "args": [
        "-NoProfile"
      ],
      "icon": "terminal-powershell",
      "color": "terminal.ansiCyan"
    },
    "PowerShell 7.5.2 (Build-Isolated)": {
      "path": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
      "args": [
        "-NoProfile",
        "-NonInteractive",
        "-Command",
        "& { Write-Host 'Preparing build environment...' -ForegroundColor Yellow; try { . '${workspaceFolder}\\load-bus-buddy-profiles.ps1' -Quiet; bb-clean -Deep; Write-Host 'Build environment ready' -ForegroundColor Green } catch { Write-Host 'Basic clean performed' -ForegroundColor Yellow; [System.GC]::Collect(); [System.GC]::WaitForPendingFinalizers() } }"
      ],
      "icon": "tools",
      "color": "terminal.ansiYellow"
    }
  },
  "terminal.integrated.defaultProfile.windows": "PowerShell 7.5.2 (BusBuddy)",
  "terminal.integrated.automationProfile.windows": {
    "path": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
    "args": [
      "-NoProfile",
      "-NonInteractive"
    ]
  },
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.integrated.shellIntegration.showWelcome": false,
  "terminal.integrated.env.windows": {
    "BUSBUDDY_AI_MODE": "enabled",
    "BUSBUDDY_WORKFLOW_ENFORCE": "true",
    "BUSBUDDY_BB_COMMANDS_REQUIRED": "true",
    "BUSBUDDY_PHASE": "2"
  },
  "busbuddy.enforceWorkflow": true,
  "busbuddy.requireBBCommands": true,
  "busbuddy.mandatoryHealthCheck": true,
  "busbuddy.currentPhase": "2",
  "busbuddy.enforcePhaseRules": true,
  "busbuddy.testFramework": "NUnit",
  "busbuddy.blockMSTest": true,
  "busbuddy.requireFluentAssertions": true,
  "busbuddy.requirePowerShell75": true,
  "busbuddy.blockLegacyPowerShell": true,
  "taskExplorer.enable": true,
  "taskExplorer.showLastTasks": true,
  "taskExplorer.includeAnt": false,
  "taskExplorer.includeGulp": false,
  "taskExplorer.includeGrunt": false,
  "taskExplorer.includeNpm": false,
  "taskExplorer.includeWorkspace": true,
  "taskExplorer.enabledTasks": {
    "workspace": true,
    "vscode": true
  },
  "github-actions.workflows.pinned.refresh.enabled": true,
  "github-actions.workflows.pinned.workflows": [
    ".github/workflows/build-and-test.yml"
  ],
  "github-actions.remote-name": "origin",
  "github-actions.workflows.validation.enabled": true,
  "github-actions.workflows.validation.strictSecretsSchema": false,
  "github-actions.disable-expression-validation": true,
  "yaml.validate": false,
  "yaml.schemas": {
    "https://json.schemastore.org/github-workflow.json": ".github/workflows/*.yml"
  },
  "yaml.customTags": [
    "!ENV scalar",
    "!ENV sequence"
  ],
  "dotnet.server.useOmnisharp": false,
  "dotnet.server.crashReporting.enabled": true,
  "dotnet.completion.showCompletionItemsFromUnimportedNamespaces": false,
  "dotnet.completion.showNameCompletionSuggestions": false,
  "dotnet.backgroundAnalysis.analyzerDiagnosticsScope": "openFiles",
  "dotnet.backgroundAnalysis.compilerDiagnosticsScope": "openFiles",
  "dotnet.automaticallyCreateSolutionInWorkspace": false,
  "dotnet.experimental.emitCompilerDiagnostics": false,
  "dotnet.enableMsBuildLoadProjectsOnDemand": false,
  "dotnet.inlayHints.enableInlayHintsForParameters": true,
  "dotnet.inlayHints.enableInlayHintsForLiteralParameters": true,
  "dotnet.inlayHints.enableInlayHintsForIndexerParameters": true,
  "dotnet.inlayHints.enableInlayHintsForObjectCreationParameters": true,
  "dotnet.inlayHints.enableInlayHintsForOtherParameters": true,
  "dotnet.inlayHints.enableInlayHintsForTypes": true,
  "dotnet.inlayHints.enableInlayHintsForImplicitVariableTypes": true,
  "dotnet.inlayHints.enableInlayHintsForLambdaParameterTypes": true,
  "dotnet.inlayHints.enableInlayHintsForImplicitObjectCreation": true,
  "dotnet.inlayHints.suppressInlayHintsForParametersThatDifferOnlyBySuffix": true,
  "dotnet.inlayHints.suppressInlayHintsForParametersThatMatchMethodIntent": true,
  "dotnet.inlayHints.suppressInlayHintsForParametersThatMatchArgumentName": true,
  "csharp.semanticHighlighting.enabled": true,
  "csharp.inlayHints.parameters.enabled": true,
  "csharp.inlayHints.parameters.forLiteralParameters": true,
  "csharp.inlayHints.parameters.forIndexerParameters": true,
  "csharp.inlayHints.parameters.forObjectCreationParameters": true,
  "csharp.inlayHints.parameters.forOtherParameters": true,
  "csharp.format.enable": true,
  "csharp.showOmnisharpLogOnError": true,
  "xaml.completion.enabled": true,
  "xaml.diagnostics.enabled": true,
  "xaml.diagnostics.schemaValidation": false,
  "xaml.formatting.enabled": true,
  "xaml.validation.enabled": false,
  "xaml.intellisense.enabled": true,
  "xaml.codeActions.enabled": true,
  "xaml.hover.enabled": true,
  "xaml.references.enabled": true,
  "xaml.rename.enabled": true,
  "xaml.symbols.enabled": true,
  "xaml.formatting.insertFinalNewline": true,
  "xaml.formatting.trimTrailingWhitespace": true,
  "xaml.formatting.insertSpaces": true,
  "xaml.formatting.tabSize": 4,
  "xaml.validation.syntaxValidation": false,
  "xaml.validation.schemaValidation": false,
  "xaml.validation.namespaceValidation": false,
  "noesisXAML.enablePreview": true,
  "noesisXAML.enableColorDecorators": true,
  "noesisXAML.enableDiagnostics": true,
  "noesisXAML.enableCompletion": true,
  "noesisXAML.enableHover": true,
  "noesisXAML.enableGoToDefinition": true,
  "noesisXAML.enableFindReferences": true,
  "noesisXAML.enableRename": true,
  "noesisXAML.enableCodeActions": true,
  "noesisXAML.enableSemanticHighlighting": true,
  "xml.fileAssociations": [
    {
      "systemId": "https://raw.githubusercontent.com/PowerShell/PowerShell/master/src/Schemas/Format.xsd",
      "pattern": "**/*.Format.ps1xml"
    },
    {
      "systemId": "https://raw.githubusercontent.com/PowerShell/PowerShell/master/src/Schemas/Types.xsd",
      "pattern": "**/*.Types.ps1xml"
    },
    {
      "systemId": "https://raw.githubusercontent.com/PowerShell/PowerShell/master/src/Schemas/PowerShellConfiguration.xsd",
      "pattern": "**/powershell.config.json"
    }
  ],
  "json.validate.enable": true,
  "json.format.enable": true,
  "json.format.keepLines": false,
  "json.schemaDownload.enable": true,
  "json.maxItemsComputed": 5000,
  "json.trace.server": "off",
  "jsonc.validate.enable": true,
  "jsonc.format.enable": true,
  "jsonc.format.keepLines": false,
  "[powershell]": {
    "editor.defaultFormatter": "ms-vscode.powershell",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.insertSpaces": true,
    "editor.tabSize": 4,
    "editor.wordWrap": "off",
    "editor.rulers": [
      120
    ],
    "editor.detectIndentation": false,
    "files.encoding": "utf8bom",
    "files.autoGuessEncoding": true
  },
  "[csharp]": {
    "editor.defaultFormatter": "ms-dotnettools.csharp",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.insertSpaces": true,
    "editor.tabSize": 4,
    "editor.wordWrap": "off",
    "editor.rulers": [
      120
    ],
    "editor.detectIndentation": false,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit",
      "source.fixAll": "explicit"
    }
  },
  "[xaml]": {
    "editor.defaultFormatter": "ms-dotnettools.csharp",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": false,
    "editor.insertSpaces": true,
    "editor.tabSize": 4,
    "editor.wordWrap": "off",
    "editor.rulers": [
      120
    ],
    "editor.detectIndentation": false,
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit"
    }
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.wordWrap": "off",
    "editor.detectIndentation": false,
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit"
    }
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.wordWrap": "off",
    "editor.detectIndentation": false,
    "editor.codeActionsOnSave": {
      "source.fixAll": "explicit"
    }
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.wordWrap": "off",
    "editor.detectIndentation": false,
    "editor.quickSuggestions": {
      "other": true,
      "comments": false,
      "strings": true
    }
  },
  "files.associations": {
    "*.ps1": "powershell",
    "*.psm1": "powershell",
    "*.psd1": "powershell",
    "*.xaml": "xaml",
    "*.cs": "csharp",
    "*.csproj": "xml",
    "*.props": "xml",
    "*.targets": "xml",
    "*.yml": "yaml",
    "*.yaml": "yaml",
    "settings.json": "jsonc",
    "launch.json": "jsonc",
    "tasks.json": "jsonc",
    "*.code-workspace": "jsonc"
  },
  "problems.decorations.enabled": true,
  "problems.showCurrentInStatus": true,
  "editor.quickSuggestions": {
    "other": "on",
    "comments": "on",
    "strings": "on"
  },
  "editor.suggestOnTriggerCharacters": true,
  "editor.acceptSuggestionOnCommitCharacter": true,
  "editor.acceptSuggestionOnEnter": "on",
  "editor.snippetSuggestions": "top",
  "editor.wordBasedSuggestions": "matchingDocuments",
  "editor.parameterHints.enabled": true,
  "editor.hover.enabled": true,
  "editor.hover.delay": 300,
  "editor.showUnused": true,
  "editor.showDeprecated": true,
  "problems.autoReveal": true,
  "editor.lightbulb.enabled": "on",
  "csharp.inlayHints.enableInlayHintsForImplicitObjectCreation": true,
  "dotnet.codeLens.enableReferencesCodeLens": true,
  "workbench.colorTheme": "Default Dark Modern",
  "workbench.iconTheme": "vs-seti",
  "workbench.editor.centeredLayout": false,
  "terminal.integrated.persistentSessionReviveProcess": "onExit",
  "workbench.reduceMotion": "on",
  "workbench.list.smoothScrolling": false,
  "editor.experimental.asyncTokenization": true,
  "typescript.suggest.enabled": false,
  "javascript.suggest.enabled": false,
  "editor.semanticTokenColorCustomizations": {
    "enabled": true,
    "rules": {
      "*.readonly": "#4FC1FF",
      "parameter.readonly": "#4FC1FF"
    }
  },
  "github.copilot.mcp.enabled": true,
  "github.copilot.mcp.configPath": ".vscode/mcp.json",
  "cSpell.words": [
    "ASPNETCORE",
    "localdb",
    "MVVM",
    "Serilog",
    "Syncfusion",
    "tavily"
  ]
}
